#!/bin/sh
# chkconfig: 235 55 45
# description: portshare-serial-client script controls the interfaces of \
#              the physical ports of Remote serial ports

BASE=/etc
DEVS=${BASE}/portshare-devices
BACKVARS=${BASE}/backvars$$
FOUND=0
BACKEXIT=0
DEV=all
GLOBALOPTS=""
# Make sure $PREFIX/sbin is in the path
PATH=`dirname $0`:$PATH

export DEV DEVS FOUND BACKEXIT BACKVARS PATH

clean()
{
	if [ -f ${BACKVARS} ]
	then
		rm -f ${BACKVARS}
	fi
}

if [ $# -lt 1 -o $# -gt 2 ]
then
	echo "Usage : portshare-serial-client (start|stop|restart|status) [device]"
	exit 2
fi

OPTION=$1
if [ $# -eq 2 ]
then
	DEV=$2
fi
case $OPTION in
start_msg)
	echo "Starting Portshare serial client"
	exit 0
	;;
stop_msg)
	echo "Stopping Portshare serial client"
	exit 0
	;;
esac

if [ ! -f ${DEVS} ]
then
	echo "portshare-serial-client : device table not found"
	exit 1
fi

clean

trap 'clean' 1 2 3 15

cat ${DEVS} | grep -v "#" | while read line
do
	if [ -z "${line}" ]
	then
		continue
	fi
	devc=`echo ${line} | cut -f1 -d:`
	serv=`echo ${line} | cut -f2 -d:`
	host=`echo ${line} | cut -f3 -d:`
	port=`echo ${line} | cut -f4 -d:`
	type=`echo ${line} | cut -f5 -d:`
	opts=`echo ${line} | cut -f6 -d:`
	opts="$GLOBALOPTS $opts"

	if [ -z "${devc}" -o -z "${serv}" -o -z "${host}" -o -z "${port}" ]
	then
		echo "portshare-serial-client : Bad device table line"
		BACKEXIT=3
		echo "BACKEXIT=${BACKEXIT}" >> ${BACKVARS} 	
		exit ${BACKEXIT}
	fi

	if [ "${DEV}" != "all" ]
	then
		if [ "${DEV}" != "${devc}" ]
		then
			continue
		else
			FOUND=1
			echo "FOUND=${FOUND}" >> ${BACKVARS}
		fi
	fi

	case ${type} in
	rtelnet)
		devst="${devc} (rtelnet at ${host}:${port})"
		if [ "${serv}" = "path" ]
		then
			opts="-p 28672 $opts"
		fi
		;;
	socket)
		devst="${devc} ( socket at ${host}:${port})"
		if [ "${serv}" = "path" ]
		then
			opts="-p 32768 $opts"
		fi
		opts="-s $opts"
		;;
	rfc2217) 
		devst="${devc} (rfc2217 at ${host}:${port})"
		case ${serv} in
		opengear|cm400?|cm41??|sd400?|im42??|img4004|acm500?)
			opts="-p 5000 $opts"
			;;
		esac
		;;
	*)
		case ${serv} in
		opengear|cm400?|cm41??|sd400?|im42??|img4004|acm500?)
			opts="-p 5000 $opts"
			;;
		*) echo "tsrport : Bad device table line"
		    BACKEXIT=2
		    echo "BACKEXIT=${BACKEXIT}" >> ${BACKVARS} 	
		    exit ${BACKEXIT}
		    ;;
		esac
		;;
	esac

if [ `uname` = "Linux" ]; then
	ppid=`ps ax | grep portshare-ser-cli | grep "${devc} " | awk '{print $1}'`
else
	ppid=`ps -ef | grep portshare-ser-cli | grep "${devc} " | awk '{print $2}'`
fi

	case ${OPTION} in
	"start")
		if [ -n "${ppid}" ]
		then
			echo "portshare-serial-client : ${devc} already active"
			continue
		fi
		echo "Starting ${devc} <<==>> ${host}:${port} interface"
		portshare-ser-cli ${opts} ${devc} ${host} ${port}
		sleep 1
		;;
	"stop")
		if [ -z "${ppid}" ]
		then
			echo "portshare-serial-client : ${devc} already inactive"
			continue
		fi
		echo "Stopping ${devc} <<==>> ${host}:${port} interface"
		kill ${ppid} 
		;;
	"restart")
		if [ -z "${ppid}" ]
		then
			echo "portshare-serial-client : ${devc} is inactive"
			echo "Starting ${devc} <<==>> ${host}:${port} interface"
			portshare-ser-cli ${opts} ${devc} ${host} ${port}
			sleep 1
		else
			echo \
			"Restarting ${devc} <<==>> ${host}:${port} interface"
			kill -s USR1 ${ppid} 
		fi
		;;
	"status")
		if [ -n "${ppid}" ]
		then
			devst="${devst} active, pid ${ppid}"
		else
			devst="${devst} inactive"
		fi
		echo ${devst}
		;;
	*)
		echo "Usage : portshare-serial-client (start|stop|restart|status) [device]"
		BACKEXIT=2
		echo "BACKEXIT=${BACKEXIT}" >> ${BACKVARS} 	
		exit ${BACKEXIT}
		;;
	esac
done
if [ -s ${BACKVARS} ]
then
	. ${BACKVARS}
fi

clean

if [ ${BACKEXIT} -ne 0 ]
then
	exit ${BACKEXIT}
fi

if [ "${DEV}" != "all" -a $FOUND -eq 0 ]
then
	echo "portshare-serial-client : device ${DEV} does not exist"
	exit 3
fi
exit 0
